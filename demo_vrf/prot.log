---- Iteration 0 ----
cur chal: b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

---- (3) Reading ACFA Report from Prv ----
prv_mac: b'\xd6\xb8IdG\x99\xb7\xe5\xb4\n4\x0fwY\x7foy8s\xbf\x81\xa2\xef\x18\xc3~\xac\xef\xafk\x8e\xfa' (<class 'bytes'>)
prv_meta: b'\x00\x00\x00\x00\x02\x00' (<class 'bytes'>)
metadata: [b'\x00', b'\x00', b'\x00', b'\x00', b'\x02', b'\x00']
prv_log_ptr: 2 (<class 'int'>)
prv_cflog: b'@\xe0\x00\xa0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' (<class 'bytes'>)
256
256

---- (4) Verify ACFA Report ----
-- Comparing MACs
-- hmac(k,
--      pmem,
--      chal,
--      metadata,
--      cflog
--      )
Expected MAC: b'\xd6\xb8IdG\x99\xb7\xe5\xb4\n4\x0fwY\x7foy8s\xbf\x81\xa2\xef\x18\xc3~\xac\xef\xafk\x8e\xfa'
mac   prv_mac
b'\xd6'   b'\xd6'
b'\xb8'   b'\xb8'
b'I'   b'I'
b'd'   b'd'
b'G'   b'G'
b'\x99'   b'\x99'
b'\xb7'   b'\xb7'
b'\xe5'   b'\xe5'
b'\xb4'   b'\xb4'
b'\n'   b'\n'
b'4'   b'4'
b'\x0f'   b'\x0f'
b'w'   b'w'
b'Y'   b'Y'
b'\x7f'   b'\x7f'
b'o'   b'o'
b'y'   b'y'
b'8'   b'8'
b's'   b's'
b'\xbf'   b'\xbf'
b'\x81'   b'\x81'
b'\xa2'   b'\xa2'
b'\xef'   b'\xef'
b'\x18'   b'\x18'
b'\xc3'   b'\xc3'
b'~'   b'~'
b'\xac'   b'\xac'
b'\xef'   b'\xef'
b'\xaf'   b'\xaf'
b'k'   b'k'
b'\x8e'   b'\x8e'
b'\xfa'   b'\xfa'
Pass Verification (app=1)
---- (5) Generate Chal' and Auth ----

---- (6) Send ACFA response ----
echo (app): b'\x01'
new_chal: b'ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'
echo (prv_chal): 
b'ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)
echo (aermin): b'\xe0\x00' (<class 'bytes'>)
expected (aermin) b'\xe0\x00'
echo (aermax): b'\xe2d' (<class 'bytes'>)
expected (aermax) b'\xe2d'
auth: b'IJ\xaf\x91`<\xf4n$\xae=\xa3\x8fQ\x8c\xafB\x87s\x91\x92\x97(J\xbe\xb4\xf2\x97\xadfH+'
echo (auth): b'IJ\xaf\x91`<\xf4n$\xae=\xa3\x8fQ\x8c\xafB\x87s\x91\x92\x97(J\xbe\xb4\xf2\x97\xadfH+' (<class 'bytes'>)
expected (auth) b'IJ\xaf\x91`<\xf4n$\xae=\xa3\x8fQ\x8c\xafB\x87s\x91\x92\x97(J\xbe\xb4\xf2\x97\xadfH+'

prv auth: 
b'IJ\xaf\x91`<\xf4n$\xae=\xa3\x8fQ\x8c\xafB\x87s\x91\x92\x97(J\xbe\xb4\xf2\x97\xadfH+' (<class 'bytes'>)
Prv ACCEPTS response from Vrf
out: b'\x01'
echo old (*(CHAL_BASE)): b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' (<class 'bytes'>)

echo (*(CHAL_BASE)): b'ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)
expected (*(CHAL_BASE)): b'ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'
echo (pmem[0:15]): b'UB \x015\xd0\x08Z\x82E*\x181@\x00h' (<class 'bytes'>)

last=0
---- Iteration 1 ----
cur chal: b'ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'

---- (3) Reading ACFA Report from Prv ----
prv_mac: b'\x02\x16\xb92O\xc0^J\x10\xf6x\xde\x84\xaa\xb1\x04\xc7a\xb6:o\xc9\xe6\x07\xc42\xe0P,\xccLb' (<class 'bytes'>)
prv_meta: b'\x00\xe0d\xe2\x80\x00' (<class 'bytes'>)
metadata: [b'\x00', b'\xe0', b'd', b'\xe2', b'\x80', b'\x00']
prv_log_ptr: 128 (<class 'int'>)
prv_cflog: b'\xfe\xdf@\xe0T\xe0\xae\xe0\xce\xe0&\xe16\xe1R\xe1`\xe18\xe1\x00\x00\x04\x00`\xe1b\xe1f\xe1\xd2\xe0$\xe1X\xe0`\xe0l\xe0x\xe0\x9c\xe0\xa0\xe0z\xe0~\xe0\xdc\xe1\x08\xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x00\x00\x05\x00\x86\xe1\x88\xe1\x8c\xe1$\xe2H\xe2\x8e\xe1\xa4\xe1\xc4\xe1\xca\xe1\xa6\xe1\x00\x00\xe8\x03\xca\xe1\xcc\xe1\xda\xe1L\xe2`\xe2\x82\xe0\xa0\xe0z\xe0~\xe0\xdc\xe1\x08\xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x00\x00\x05\x00\x86\xe1\x88\xe1\x8c\xe1$\xe2H\xe2\x8e\xe1\xa4\xe1\xc4\xe1\xca\xe1\xa6\xe1\x00\x00\xe8\x03\xca\xe1\xcc\xe1\xda\xe1L\xe2`\xe2\x82\xe0\xa0\xe0z\xe0~\xe0\xdc\xe1\x08\xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1x\xe1~\xe1\x82\xe1\x00\xa0' (<class 'bytes'>)
256
256

---- (4) Verify ACFA Report ----
-- Comparing MACs
-- hmac(k,
--      pmem,
--      chal,
--      metadata,
--      cflog
--      )
Expected MAC: b'\x02\x16\xb92O\xc0^J\x10\xf6x\xde\x84\xaa\xb1\x04\xc7a\xb6:o\xc9\xe6\x07\xc42\xe0P,\xccLb'
mac   prv_mac
b'\x02'   b'\x02'
b'\x16'   b'\x16'
b'\xb9'   b'\xb9'
b'2'   b'2'
b'O'   b'O'
b'\xc0'   b'\xc0'
b'^'   b'^'
b'J'   b'J'
b'\x10'   b'\x10'
b'\xf6'   b'\xf6'
b'x'   b'x'
b'\xde'   b'\xde'
b'\x84'   b'\x84'
b'\xaa'   b'\xaa'
b'\xb1'   b'\xb1'
b'\x04'   b'\x04'
b'\xc7'   b'\xc7'
b'a'   b'a'
b'\xb6'   b'\xb6'
b':'   b':'
b'o'   b'o'
b'\xc9'   b'\xc9'
b'\xe6'   b'\xe6'
b'\x07'   b'\x07'
b'\xc4'   b'\xc4'
b'2'   b'2'
b'\xe0'   b'\xe0'
b'P'   b'P'
b','   b','
b'\xcc'   b'\xcc'
b'L'   b'L'
b'b'   b'b'
Pass Verification (app=1)
---- (5) Generate Chal' and Auth ----

---- (6) Send ACFA response ----
echo (app): b'\x01'
new_chal: b'BBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'
echo (prv_chal): 
b'BBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)
echo (aermin): b'\xe0\x00' (<class 'bytes'>)
expected (aermin) b'\xe0\x00'
echo (aermax): b'\xe2d' (<class 'bytes'>)
expected (aermax) b'\xe2d'
auth: b'p^7\xfd\xc1\x1e\x0cP#P+"\xa2\xc2}\xd3\xb8\xab\x0ei\x04\xf6\xc3S\x14z\x8f\xf7^L\x80\xd2'
echo (auth): b'p^7\xfd\xc1\x1e\x0cP#P+"\xa2\xc2}\xd3\xb8\xab\x0ei\x04\xf6\xc3S\x14z\x8f\xf7^L\x80\xd2' (<class 'bytes'>)
expected (auth) b'p^7\xfd\xc1\x1e\x0cP#P+"\xa2\xc2}\xd3\xb8\xab\x0ei\x04\xf6\xc3S\x14z\x8f\xf7^L\x80\xd2'

prv auth: 
b'p^7\xfd\xc1\x1e\x0cP#P+"\xa2\xc2}\xd3\xb8\xab\x0ei\x04\xf6\xc3S\x14z\x8f\xf7^L\x80\xd2' (<class 'bytes'>)
Prv ACCEPTS response from Vrf
out: b'\x01'
echo old (*(CHAL_BASE)): b'ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)

echo (*(CHAL_BASE)): b'BBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)
expected (*(CHAL_BASE)): b'BBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'
echo (pmem[0:15]): b'UB \x015\xd0\x08Z\x82E*\x181@\x00h' (<class 'bytes'>)

last=0
---- Iteration 2 ----
cur chal: b'BBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'

---- (3) Reading ACFA Report from Prv ----
prv_mac: b"\xfd\x13\xae\xd4\x0b\x0eG\xab*\x1c0\xad\xa2\xb4=\n8U\xce\xd8\xb8\xa5M\x99/=v\xdb\xd0\xa9'\x8d" (<class 'bytes'>)
prv_meta: b'\x00\xe0d\xe2\x80\x00' (<class 'bytes'>)
metadata: [b'\x00', b'\xe0', b'd', b'\xe2', b'\x80', b'\x00']
prv_log_ptr: 128 (<class 'int'>)
prv_cflog: b'\xfe\xdf\x82\xe1\x86\xe1z\xe1\x00\x00\x05\x00\x86\xe1\x88\xe1\x8c\xe1$\xe2H\xe2\x8e\xe1\xa4\xe1\xc4\xe1\xca\xe1\xa6\xe1\x00\x00\xe8\x03\xca\xe1\xcc\xe1\xda\xe1L\xe2`\xe2\x82\xe0\xa0\xe0z\xe0~\xe0\xdc\xe1\x08\xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x00\x00\x05\x00\x86\xe1\x88\xe1\x8c\xe1$\xe2H\xe2\x8e\xe1\xa4\xe1\xc4\xe1\xca\xe1\xa6\xe1\x00\x00\xe8\x03\xca\xe1\xcc\xe1\xda\xe1L\xe2`\xe2\x82\xe0\xa0\xe0z\xe0~\xe0\xdc\xe1\x08\xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x00\x00\x05\x00\x86\xe1\x88\xe1\x8c\xe1$\xe2H\xe2\x8e\xe1\xa4\xe1\xc4\xe1\xca\xe1\xa6\xe1\x00\x00\xe8\x03\xca\xe1\xcc\xe1\xda\xe1L\xe2`\xe2\x82\xe0\xa0\xe0z\xe0~\xe0\xdc\xe1\x08\xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1j\xe1\x00\xa0' (<class 'bytes'>)
256
256

---- (4) Verify ACFA Report ----
-- Comparing MACs
-- hmac(k,
--      pmem,
--      chal,
--      metadata,
--      cflog
--      )
Expected MAC: b"\xfd\x13\xae\xd4\x0b\x0eG\xab*\x1c0\xad\xa2\xb4=\n8U\xce\xd8\xb8\xa5M\x99/=v\xdb\xd0\xa9'\x8d"
mac   prv_mac
b'\xfd'   b'\xfd'
b'\x13'   b'\x13'
b'\xae'   b'\xae'
b'\xd4'   b'\xd4'
b'\x0b'   b'\x0b'
b'\x0e'   b'\x0e'
b'G'   b'G'
b'\xab'   b'\xab'
b'*'   b'*'
b'\x1c'   b'\x1c'
b'0'   b'0'
b'\xad'   b'\xad'
b'\xa2'   b'\xa2'
b'\xb4'   b'\xb4'
b'='   b'='
b'\n'   b'\n'
b'8'   b'8'
b'U'   b'U'
b'\xce'   b'\xce'
b'\xd8'   b'\xd8'
b'\xb8'   b'\xb8'
b'\xa5'   b'\xa5'
b'M'   b'M'
b'\x99'   b'\x99'
b'/'   b'/'
b'='   b'='
b'v'   b'v'
b'\xdb'   b'\xdb'
b'\xd0'   b'\xd0'
b'\xa9'   b'\xa9'
b"'"   b"'"
b'\x8d'   b'\x8d'
Pass Verification (app=1)
---- (5) Generate Chal' and Auth ----

---- (6) Send ACFA response ----
echo (app): b'\x01'
new_chal: b'CBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'
echo (prv_chal): 
b'CBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)
echo (aermin): b'\xe0\x00' (<class 'bytes'>)
expected (aermin) b'\xe0\x00'
echo (aermax): b'\xe2d' (<class 'bytes'>)
expected (aermax) b'\xe2d'
auth: b'\x15\x1e\x1c,\xeb\x87z\xa0w\x88\xa6\xd5F\x86\x9d\xeb\xa9=\xafh\x14&\xa4\xe3\x87\x15pX}q\xc0\xf5'
echo (auth): b'\x15\x1e\x1c,\xeb\x87z\xa0w\x88\xa6\xd5F\x86\x9d\xeb\xa9=\xafh\x14&\xa4\xe3\x87\x15pX}q\xc0\xf5' (<class 'bytes'>)
expected (auth) b'\x15\x1e\x1c,\xeb\x87z\xa0w\x88\xa6\xd5F\x86\x9d\xeb\xa9=\xafh\x14&\xa4\xe3\x87\x15pX}q\xc0\xf5'

prv auth: 
b'\x15\x1e\x1c,\xeb\x87z\xa0w\x88\xa6\xd5F\x86\x9d\xeb\xa9=\xafh\x14&\xa4\xe3\x87\x15pX}q\xc0\xf5' (<class 'bytes'>)
Prv ACCEPTS response from Vrf
out: b'\x01'
echo old (*(CHAL_BASE)): b'BBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)

echo (*(CHAL_BASE)): b'CBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)
expected (*(CHAL_BASE)): b'CBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'
echo (pmem[0:15]): b'UB \x015\xd0\x08Z\x82E*\x181@\x00h' (<class 'bytes'>)

last=0
---- Iteration 3 ----
cur chal: b'CBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'

---- (3) Reading ACFA Report from Prv ----
prv_mac: b'B\xe1\x13\xa2\xd5\xb4\xb0r\x93in\x85\xc8\xb2Bs\xfb\xfe\xbb\xb6\xd8H\xee\xf7\x08\x1d\xc4\xe6\xca\xb68\r' (<class 'bytes'>)
prv_meta: b'\x00\xe0d\xe2v\x00' (<class 'bytes'>)
metadata: [b'\x00', b'\xe0', b'd', b'\xe2', b'v', b'\x00']
prv_log_ptr: 118 (<class 'int'>)
prv_cflog: b'\xfe\xdfj\xe1x\xe1~\xe1\x86\xe1z\xe1\x00\x00\x05\x00\x86\xe1\x88\xe1\x8c\xe1$\xe2H\xe2\x8e\xe1\xa4\xe1\xc4\xe1\xca\xe1\xa6\xe1\x00\x00\xe8\x03\xca\xe1\xcc\xe1\xda\xe1L\xe2`\xe2\x82\xe0\xa0\xe0z\xe0~\xe0\xdc\xe1\x08\xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x00\x00\x05\x00\x86\xe1\x88\xe1\x8c\xe1$\xe2H\xe2\x8e\xe1\xa4\xe1\xc4\xe1\xca\xe1\xa6\xe1\x00\x00\xe8\x03\xca\xe1\xcc\xe1\xda\xe1L\xe2`\xe2\x82\xe0\xa0\xe0z\xe0~\xe0\xdc\xe1\x08\xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1x\xe1~\xe1\x86\xe1z\xe1\x00\x00\x05\x00\x86\xe1\x88\xe1\x8c\xe1$\xe2H\xe2\x8e\xe1\xa4\xe1\xc4\xe1\xca\xe1\xa6\xe1\x00\x00\xe8\x03\xca\xe1\xcc\xe1\xda\xe1L\xe2`\xe2\x82\xe0\xa0\xe0\xa2\xe0\xa2\xe0d\xe2d\xe2h\xe2h\xe2\x00\xa0\x86\xe1z\xe1\x86\xe1\x88\xe1\x8c\xe1\x0c\xe2 \xe2h\xe1j\xe1\x00\xa0' (<class 'bytes'>)
256
256

---- (4) Verify ACFA Report ----
-- Comparing MACs
-- hmac(k,
--      pmem,
--      chal,
--      metadata,
--      cflog
--      )
Expected MAC: b'B\xe1\x13\xa2\xd5\xb4\xb0r\x93in\x85\xc8\xb2Bs\xfb\xfe\xbb\xb6\xd8H\xee\xf7\x08\x1d\xc4\xe6\xca\xb68\r'
mac   prv_mac
b'B'   b'B'
b'\xe1'   b'\xe1'
b'\x13'   b'\x13'
b'\xa2'   b'\xa2'
b'\xd5'   b'\xd5'
b'\xb4'   b'\xb4'
b'\xb0'   b'\xb0'
b'r'   b'r'
b'\x93'   b'\x93'
b'i'   b'i'
b'n'   b'n'
b'\x85'   b'\x85'
b'\xc8'   b'\xc8'
b'\xb2'   b'\xb2'
b'B'   b'B'
b's'   b's'
b'\xfb'   b'\xfb'
b'\xfe'   b'\xfe'
b'\xbb'   b'\xbb'
b'\xb6'   b'\xb6'
b'\xd8'   b'\xd8'
b'H'   b'H'
b'\xee'   b'\xee'
b'\xf7'   b'\xf7'
b'\x08'   b'\x08'
b'\x1d'   b'\x1d'
b'\xc4'   b'\xc4'
b'\xe6'   b'\xe6'
b'\xca'   b'\xca'
b'\xb6'   b'\xb6'
b'8'   b'8'
b'\r'   b'\r'
Pass Verification (app=1)
---- (5) Generate Chal' and Auth ----

---- (6) Send ACFA response ----
echo (app): b'\x01'
new_chal: b'DBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'
echo (prv_chal): 
b'DBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)
echo (aermin): b'\xe0\x00' (<class 'bytes'>)
expected (aermin) b'\xe0\x00'
echo (aermax): b'\xe2d' (<class 'bytes'>)
expected (aermax) b'\xe2d'
auth: b'i\xdcou\xa4\x8f\xc7\x0b\x8a\xc2\x15\xc2\xf5\x92\xb7\x05\xb9\x14\xf9\x94\xbbL\x89\x90f\x99J\xb7\xc6T\xad\x13'
echo (auth): b'i\xdcou\xa4\x8f\xc7\x0b\x8a\xc2\x15\xc2\xf5\x92\xb7\x05\xb9\x14\xf9\x94\xbbL\x89\x90f\x99J\xb7\xc6T\xad\x13' (<class 'bytes'>)
expected (auth) b'i\xdcou\xa4\x8f\xc7\x0b\x8a\xc2\x15\xc2\xf5\x92\xb7\x05\xb9\x14\xf9\x94\xbbL\x89\x90f\x99J\xb7\xc6T\xad\x13'

prv auth: 
b'i\xdcou\xa4\x8f\xc7\x0b\x8a\xc2\x15\xc2\xf5\x92\xb7\x05\xb9\x14\xf9\x94\xbbL\x89\x90f\x99J\xb7\xc6T\xad\x13' (<class 'bytes'>)
Prv ACCEPTS response from Vrf
out: b'\x01'
echo old (*(CHAL_BASE)): b'CBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)

echo (*(CHAL_BASE)): b'DBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`' (<class 'bytes'>)
expected (*(CHAL_BASE)): b'DBCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`'
echo (pmem[0:15]): b'UB \x015\xd0\x08Z\x82E*\x181@\x00h' (<class 'bytes'>)

last=1
